" .vimrc
"
"     Author: Robert C. Curtis
"

" allow vim settings
set nocompatible

" tabs
set tabstop=4
set shiftwidth=4
set noexpandtab

" Vundle ------------------------------------------------------
filetype off                  " required
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" plugins
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" Vundle ------------------------------------------------------

" default settings
colorscheme hybrid
set background=dark
let g:airline_theme = "hybrid"

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" folding. by default use markers {{{ }}}
set foldmethod=marker
let g:c_no_comment_fold = 1

" keep 50 lines of command history
set history=50

" search
set incsearch	" do incremental searching
set hlsearch	" highlight last search
set ignorecase	" ignorecase on searches
set smartcase	" unless they contain mixed case

syntax on		" syntax highlighting

set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set scrolloff=2	" always show 2 lines when scrolling
set title		" let vim modify the title

" program to pipe text through when pressing =
set equalprg=fmt

" make gf open file in new tab
map gf :tabnew <cfile><CR>
noremap <silent> <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>
noremap <F6> :GundoToggle<CR>

" Functions
function! ReadScriptFiles(wildcard)
	let scriptfiles = glob(a:wildcard)
	let scriptlist = split(scriptfiles, '\n')
	for scriptfile in scriptlist
		exe 'source ' . scriptfile
	endfor
endfunction

function! ReadEnv()
    let opts = $vimoptions
    let optlist = split(opts, ';')
    for opt in optlist
        exe 'set ' . opt
    endfor
endfunction

function! ConfigFindPath()
    if(strlen($vimpath))
        let newpath = substitute($vimpath, ";", ",", "g")
        let cmd = "set path=" . newpath
        execute cmd
    endif
endfunction

" function that creates a scratch buffer
function! Scratch()
    set buftype=nofile
    setlocal noswapfile
    setlocal bufhidden=delete
endfunction

" source all .vim files in ~/.vim/scripts
call ReadScriptFiles("~/.vim/scripts/*.vim")
" set all options defined in vimoptions env
call ReadEnv()
" configure path from env
call ConfigFindPath()

" Toggle Nerd Tree
map <silent> <C-n> :NERDTreeToggle<CR>

set nocompatible 
filetype plugin on
set modeline
set modelines=5
execute pathogen#infect()
