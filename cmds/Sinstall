COMMANDS="install ${COMMANDS}"

install_SHORT_HELP="install a manifest"
install_LONG_HELP="usage: install <manifest> [destination (default:~)]"

handle_entry () {
	DESTDIR="${1}"
	SRCDIR="${2}"
	TYPE="${3}"
	DESTFILE="${4}"
	SRCFILE="${5}"

	DEST="${DESTDIR}/${DESTFILE}"

	if [ -n "$SRCFILE" -a -e "${SRCDIR}/${SRCFILE}" ]; then
		SRC="$(abspath ${SRCDIR}/${SRCFILE})"
	fi

	mkdir -p "$(dirname $DEST)"

	case "$TYPE" in
		"FILE" )
			if [ -e "$DEST" ]; then
				echo "Skipping: file '$DEST' already exists"
			else
				[ -e "$SRC" ] && cp "$SRC" "$DEST" || \
					echo "Warning: Source does not exist: $SRC"
			fi
			;;

		"LINK" )
			if [ -e "$DEST" -o -L "$DEST" ]; then
				echo "Skipping: file '$DEST' already exists"
			else
				[ -e "$SRC" ] && ln -s "$SRC" "$DEST" || \
					echo "Warning: Source does not exist: $SRC"
			fi
			;;
		* )
			echo "Warning: Invalid type: $1"
			;;
	esac
}

cmd_install () {
	MANIFEST="$1"
	DESTDIR="${2:-${HOME}}"

	SRCDIR="$(dirname $MANIFEST)"

	if [ ! -e "$MANIFEST" ]; then
		error_exit "Manifest not found"
	fi

	if [ ! -d "$DESTDIR" ]; then
		error_exit "Destination not found"
	fi

	awk 'BEGIN { FS="[\t]+"; }
			/^[A-Z]/ {
				print "\"" $1 "\" \"" $2 "\" \"" $3 "\"";
			}
			' "$MANIFEST" | while read handleargs; do
		eval handle_entry "\"$DESTDIR\"" "\"$SRCDIR\"" $handleargs
	done
}

# vim:filetype=sh
